name: Tag Track
description: Calculate semantic version bump based on conventional commits
author: David Lopez <davidlopez.hellin@outlook.com>
inputs:
  create-tag:
    description: Create a new tag with bumped version, defaults to false.
    default: false
  push-tag:
    description: Push the new tag to the repository if `create-tag` is used, defaults to false.
    default: false
  github-repo:
    description: Github repository in the format owner/repo, defaults to the repository that triggers the action.
    required: false
  github-api-url:
    description: Github API URL, defaults to the value of the environment variable `GITHUB_API_URL`.
    required: false
  github-token:
    description: Github token to authorize requests to GitHub REST API. Can cause rate limit to be increased.
    required: false
  commit-sha:
    description: Commit SHA from where the version bump will be calculated, defaults to the commit that triggers the action.
    required: false
  compile:
    description: Instead of downloading the binary, compile it from source.
    default: false
  useCache:
    description: Save binary in cache to avoid downloading or compiling it every time.
    default: false
outputs:
  tag-created:
    description: True if a new tag was created.
    value: ${{ steps.tag-track-runner.outputs.tag-created }}
  old-version:
    description: Old version before calculating the version bump.
    value: ${{ steps.tag-track-runner.outputs.old-version }}
  new-version:
    description: New version after calculating the version bump.
    value: ${{ steps.tag-track-runner.outputs.new-version }}
  skipped-commits:
    description: List of commits that were skipped because they don't match the commit pattern.
    value: ${{ steps.tag-track-runner.outputs.skipped-commits }}
  error:
    description: Error message if something went wrong.
    value: ${{ steps.tag-track-runner.outputs.error }}
runs:
  using: composite
  steps:
    - name: Add backslash before each / in the repository name
      id: repo-backslash
      shell: bash
      run: |
        echo "github-repo=$(echo $GITHUB_REPOSITORY | sed 's/\//\\\//g' )" >> $GITHUB_OUTPUT
    - name: Get action reference
      shell: bash
      id: action-ref-generator
      run: |
        echo "action-ref=$(echo $GITHUB_ACTION_PATH | sed "s/.*${{ steps.repo-backslash.outputs.github-repo }}\///" )" >> $GITHUB_OUTPUT
    - name: Checkout Tag Track
      if: ${{ inputs.compile == 'true' }}
      uses: actions/checkout@v4
      with:
        repository: dloez/tag-track
        ref: ${{ steps.action-ref-generator.outputs.action-ref }}
        path: tag-track-repo
    - name: Generate compile cache key
      if: ${{ inputs.compile == 'true' && inputs.useCache == 'true' }}
      id: gen-compile-cache-key
      shell: bash
      run: echo "compile-cache-key=tag-track_compile_${RUNNER_OS}_${RUNNER_ARCH}_${{ hashFiles('tag-track-repo/**/*.rs', 'tag-track-repo/.cargo/**', 'tag-track-repo/Cargo*') }}" >> $GITHUB_OUTPUT
    - name: Restore compile cache
      if: ${{ inputs.compile == 'true' && inputs.useCache == 'true' }}
      id: compile-cache-restore
      uses: actions/cache/restore@v3
      with:
        path: tag-track-bin
        key: ${{ steps.gen-compile-cache-key.outputs.compile-cache-key }}
    - name: Setup rust
      if: ${{ inputs.compile == 'true' && steps.compile-cache-restore.outputs.cache-hit != 'true' }}
      uses: dtolnay/rust-toolchain@stable
      with:
        toolchain: 1.71.0
    - name: Compile Tag Track
      if: ${{ inputs.compile == 'true' && steps.compile-cache-restore.outputs.cache-hit != 'true' }}
      shell: bash
      run: |
        cd tag-track-repo
        cargo build --release
        mkdir -p ../tag-track-bin
        mv target/release/tag-track ../tag-track-bin/tag-track
        rm -rf tag-track-repo
    - name: Save cache
      if: ${{ inputs.compile == 'true' && inputs.useCache == 'true' && steps.compile-cache-restore.outputs.cache-hit != 'true' }}
      uses: actions/cache/save@v3
      with:
        path: tag-track-bin
        key: ${{ steps.gen-compile-cache-key.outputs.compile-cache-key }}
    - name: Generate download cache key
      if: ${{ inputs.compile == 'false' && inputs.useCache == 'true' }}
      id: gen-download-cache-key
      shell: bash
      run: echo "download-cache-key=tag-track_download_${RUNNER_OS}_${RUNNER_ARCH}_${{ steps.action-ref-generator.outputs.action-ref }}" >> $GITHUB_OUTPUT
    - name: Restore download cache
      if: ${{ inputs.compile == 'false' && inputs.useCache == 'true' }}
      id: download-cache-restore
      uses: actions/cache/restore@v3
      with:
        path: tag-track-bin
        key: ${{ steps.gen-download-cache-key.outputs.download-cache-key }}
    - name: Download Tag Track
      if: ${{ inputs.compile == 'false' && steps.download-cache-restore.outputs.cache-hit != 'true' }}
      shell: bash
      run: |
        curl https://raw.githubusercontent.com/dloez/tag-track/${{ steps.action-ref-generator.outputs.action-ref }}/install.sh | sh -s ${{ steps.action-ref-generator.outputs.action-ref }}
        mkdir -p tag-track-bin
        mv $HOME/.tag-track/bin/tag-track ./tag-track-bin/tag-track
    - name: Save cache
      if: ${{ inputs.compile == 'false' && inputs.useCache == 'true' && steps.download-cache-restore.outputs.cache-hit != 'true' }}
      uses: actions/cache/save@v3
      with:
        path: tag-track-bin
        key: ${{ steps.gen-download-cache-key.outputs.download-cache-key }}
    - name: Calculate version bump
      id: tag-track-runner
      shell: bash
      run: |
        set +e
        command="./tag-track-bin/tag-track --output-format json"
        if [ -n "${{ inputs.github-token }}" ]; then
          command="$command --github-token ${{ inputs.github-token }}"
        fi
        if [ -n "${{ inputs.github-repo }}" ]; then
          command="$command --github-repo ${{ inputs.github-repo }}"
        else
          command="$command --github-repo $GITHUB_REPOSITORY"
        fi
        if [ -n "${{ inputs.github-api-url }}" ]; then
          command="$command --github-api-url ${{ inputs.github-api-url }}"
        else
          command="$command --github-api-url $GITHUB_API_URL"
        fi
        if [ -n "${{ inputs.commit-sha }}" ]; then
          command="$command --commit-sha ${{ inputs.commit-sha }}"
        fi
        if [ "${{ inputs.create-tag }}" == "true" ]; then
          command="$command --create-tag"
        fi
        echo "::debug::Running command $command"
        tag_track_output="$(eval $command)"
        echo "tag-created=$(echo $tag_track_output | jq -r '.tag_created')" >> $GITHUB_OUTPUT
        echo "old-version=$(echo $tag_track_output | jq -r '.old_version')" >> $GITHUB_OUTPUT
        echo "new-version=$(echo $tag_track_output | jq -r '.new_version')" >> $GITHUB_OUTPUT
        echo "skipped-commits=$(echo $tag_track_output | jq -cr '.skipped_commits')" >> $GITHUB_OUTPUT
        echo "error=$(echo $tag_track_output | jq -r '.error')" >> $GITHUB_OUTPUT
    - name: Print skipped commits
      if: ${{ steps.tag-track-runner.outputs.skipped-commits }}
      shell: bash
      run: |
        for element in $(echo '${{ steps.tag-track-runner.outputs.skipped-commits }}' | jq -r '.[]'); do
          echo "::warning::Commit '$element' does not match the commit pattern"
        done
    - name: Check tag-track error
      shell: bash
      if: ${{ steps.tag-track-runner.outputs.error }}
      run: echo ::error::${{ steps.tag-track-runner.outputs.error }} && exit 1
    - name: Push tag
      shell: bash
      if: ${{ steps.tag-track-runner.outputs.created-tag && inputs.push-tag }}
      run: git push origin --tags
